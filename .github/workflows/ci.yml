name: Python Serial Communication CI

on:
  push:
    branches:
      - feature/develop/task5
  pull_request:
    branches:
      - feature/develop/task5

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python environment
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      # Install dependencies
      - name: Install Dependencies
        run: |
          python3 -m venv Client-side/venv
          source Client-side/venv/bin/activate
          pip install --upgrade pip
          pip install pytest pytest-cov pyserial coverage
          deactivate

      # Run software tests with coverage
      - name: Run Software Tests
        run: |
          source Client-side/venv/bin/activate
          rm -f .coverage
          coverage run --source=Client-side -m pytest Client-side/tests/sw-tests.py --junitxml=Client-side/deploy/test-results/sw-results.xml
          deactivate

      # Run hardware tests with coverage
      - name: Run Hardware Tests
        run: |
          source Client-side/venv/bin/activate
          if [[ -e "/dev/ttyUSB0" ]]; then
            coverage run --append Client-side/tests/hw-tests.py --port /dev/ttyUSB0 --baudrate 9600 || echo "Hardware tests failed or skipped."
          else
            echo "Hardware tests skipped: No device connected."
          fi
          deactivate


      # Upload artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: serial-communication-artifacts
          path: Client-side/deploy/
